name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
permissions:
    contents: write
    
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - shell: cmd
        run: |
          cd %USERPROFILE%\Downloads &&^
          git clone https://github.com/abcminiuser/lufa.git &&^
          cd lufa &&^
          git checkout LUFA-210130
          
      # - shell: cmd
      #   run: |
      #     curl https://github.com/dirkarnez/googletest-prebuilt/releases/download/v1.14.0/googletest-v1.14.0-${{  matrix.compiler.name }}.zip -L -O &&^
      #     7z.exe x googletest-v1.14.0-${{  matrix.compiler.name }}.zip -o"googletest-v1.14.0-${{  matrix.compiler.name }}"

          
      # - name: set PATH, check mingw version, cmake generate, build and install
      #   if: ${{ !matrix.compiler.url }}
      #   shell: cmd
      #   run: |
      #       set PATH=^
      #       ${{ github.workspace }}\mingw64;^
      #       ${{ github.workspace }}\mingw64\bin;^
      #       ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
      #       set CD_LINUX=%CD:\=/%
      #       cd libsoda-cxx &&^
      #       cmake.exe -G "Visual Studio 17 2022" -A x64 ^
      #       -DCMAKE_BUILD_TYPE=Release ^
      #       -DBUILD_SHARED_LIBS=OFF ^
      #       -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
      #       cd cmake-build && cmake --build . --config Release && cmake --install . 
            
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
          setup.cmd &&^
          local-build.cmd &&^
          echo Successful build &&^
          dir
          pause
