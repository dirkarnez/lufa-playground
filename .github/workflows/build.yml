name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
permissions:
    contents: write
    
jobs:
  build:
    strategy:
      matrix:
        compiler:
        - {
            name: "x86_64-8.1.0-release-posix-seh-rt_v6-rev0",
            url: "https://github.com/dirkarnez/cpp-tools/raw/main/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z"
          }
        - {
            name: "winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1",
            url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-12.0.1-9.0.0-r1/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64-9.0.0-r1.zip"
          }

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
          
      - name: download compiler
        if: ${{  matrix.compiler.url }}
        shell: cmd
        run: |
          curl ${{ matrix.compiler.url }} -L --output compiler &&^
          7z.exe x compiler
          
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip

      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"

          
      - shell: cmd
        run: |
          curl https://github.com/dirkarnez/googletest-prebuilt/releases/download/v1.14.0/googletest-v1.14.0-${{  matrix.compiler.name }}.zip -L -O &&^
          7z.exe x googletest-v1.14.0-${{  matrix.compiler.name }}.zip -o"googletest-v1.14.0-${{  matrix.compiler.name }}"

          
      # - name: set PATH, check mingw version, cmake generate, build and install
      #   if: ${{ !matrix.compiler.url }}
      #   shell: cmd
      #   run: |
      #       set PATH=^
      #       ${{ github.workspace }}\mingw64;^
      #       ${{ github.workspace }}\mingw64\bin;^
      #       ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
      #       set CD_LINUX=%CD:\=/%
      #       cd libsoda-cxx &&^
      #       cmake.exe -G "Visual Studio 17 2022" -A x64 ^
      #       -DCMAKE_BUILD_TYPE=Release ^
      #       -DBUILD_SHARED_LIBS=OFF ^
      #       -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
      #       cd cmake-build && cmake --build . --config Release && cmake --install . 
            
      - name: set PATH, check mingw version, cmake generate, build and install
        if: ${{ matrix.compiler.url }}
        shell: cmd
        run: |
            set PATH=^
            ${{ github.workspace }}\mingw64;^
            ${{ github.workspace }}\mingw64\bin;^
            ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
            set CD_LINUX=%CD:\=/%
            gcc --version &&^
            cmake.exe -G"MinGW Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DGTest_DIR="%CD_LINUX%/googletest-v1.14.0-${{  matrix.compiler.name }}/lib/cmake/GTest" ^
            -B./cmake-build &&^
            cd cmake-build &&^
            cmake --build . &&^
            ctest &&^
            echo Successful build &&^
            pause
    
    # cmake --build . --config Release

      # - name: Archive Release
      #   uses: thedoctor0/zip-release@master
      #   with:
      #     type: 'zip'
      #     directory: "cmake-build"
      #     filename: "${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
        
      # - name: Release prebuilt
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "cmake-build/${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.compiler.name }}.zip"
      #     allowUpdates: true
      #     token: ${{ secrets.GITHUB_TOKEN }}
